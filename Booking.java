/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.awt.Button;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Panel;
import java.awt.Rectangle;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Akash
 */
public class Booking extends javax.swing.JFrame {

   

    /**
     * Creates new form Booking
     */
    public Booking() {
//        seatList.add(101);
        initComponents();
        //jPanel1 = new Test();
        draw();
//        add(leftPanel);
    }
    public Booking(String movieName,String date) {
        this.movieName = movieName;
        this.date = date;
//        seatList.add(101);
        initComponents();
        draw();
//        add(leftPanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        BookingTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        Submit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        UserAge = new javax.swing.JTextField();
        seat = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        Insert = new javax.swing.JButton();
        InsertError = new javax.swing.JLabel();
        Remove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age", "Seat Number"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(BookingTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Movie Booking System");

        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });

        jLabel2.setText("Left Column");

        jLabel3.setText("Centre");

        jLabel4.setText("Right Column ");

        jLabel6.setText("Name");

        name.setText("UserName");
        name.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                nameFocusGained(evt);
            }
        });

        UserAge.setText("Age");
        UserAge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                UserAgeFocusGained(evt);
            }
        });

        seat.setText("Seat");
        seat.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                seatFocusGained(evt);
            }
        });
        seat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seatActionPerformed(evt);
            }
        });

        jLabel7.setText("AGE :");

        jLabel8.setText("SeatNumber");

        Insert.setText("Insert");
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });

        Remove.setText("Remove Row");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 378, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(476, 476, 476)
                .addComponent(jLabel4)
                .addGap(154, 154, 154))
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserAge, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(95, 95, 95)
                .addComponent(seat, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(163, 163, 163)
                .addComponent(Insert)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Remove)
                .addGap(120, 120, 120))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(InsertError, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Submit)
                .addGap(60, 60, 60))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(UserAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(Insert)
                    .addComponent(Remove))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(InsertError, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(182, 182, 182)
                        .addComponent(Submit)))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addContainerGap(211, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
                PreparedStatement stmt = null;
                ResultSet rs = null;
                String driver = "com.mysql.jdbc.Driver";
//                String date = jTextFieldDate.getText(); 
                try {
                   Class.forName(driver);
                    } catch (ClassNotFoundException ex) {
                        Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                    }


               try {
                       conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/LoginDB","root","16402204");
                   } catch (SQLException ex) {
                       Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                   }
               
               DefaultTableModel model = (DefaultTableModel) BookingTable.getModel();
               int row = model.getRowCount();
               for(int i=0;i<row;i++)
               {        
                        
                        String UserName  = (String) model.getValueAt(i, 0);
                        int UserAge =  (int) model.getValueAt(i, 1);
                        int UserSeat = (int) model.getValueAt(i, 2);
                        
         //               String query = "INSERT INTO UserTable( UserName , Password) VALUES (?,?)";
                         String query = "INSERT INTO "+movieName+" (UserName,SeatNo,Date) Values (?,?,?)";

                         try {
                             stmt = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
                 //            stmt.setInt(1, id);
                             stmt.setString(1, UserName);
                             stmt.setInt(2, UserSeat);
                             stmt.setString(3,date);
                             stmt.executeUpdate();
                             
                             seatList.add(UserSeat);
                 //            System.out.print("h");
                         } catch (SQLException ex) {
                             Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
                         }
               }
               int amount =0;
               amount = row*275;
               JOptionPane.showMessageDialog(null, "Succesfully Inserted Please Pay The amount of "+ amount);
               for(int i=0;i<seatList.size();i++)
               {
                   int seatNumber = seatList.get(i);
                   JButton button ;
                   for(int j=0;j<buttonList.size();j++)
                   {
                       button = buttonList.get(j);
                       if(seatNumber == Integer.parseInt(button.getText()))
                       {
                           button.setBackground(Color.red);  
                           break;
                       }
                   }
               }
//               int row = model.getRowCount();
               for(int i=0;i<row;i++)
               {
                   model.removeRow(0);
               }

    }//GEN-LAST:event_SubmitActionPerformed

    private void seatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seatActionPerformed
        // TODO add your handling code here:
        seat.setText("");
    }//GEN-LAST:event_seatActionPerformed

    private void nameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_nameFocusGained
        // TODO add your handling code here:
        name.setText("");
    }//GEN-LAST:event_nameFocusGained

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        // TODO add your handling code here:
        InsertError.setText("");
//        JButton button;
        String UserName = name.getText();
        int Age = Integer.parseInt(UserAge.getText());
        int Seat = Integer.parseInt(seat.getText());
        if((Seat>100&&Seat<137) || (Seat>200&&Seat<241) || (Seat>300&&Seat<337) )
        {        int flag=0;
        for(int i=0;i<seatList.size();i++)
        {
            if(Seat==seatList.get(i))
            {
                InsertError.setText("Can't Select this Seat");
                flag=1;
                break;
            }
        }
        if(flag==0)
        {
        DefaultTableModel model = (DefaultTableModel) BookingTable.getModel();
        model.addRow(new Object[] {UserName,Age,Seat});
        }
        }
        else
        {
            InsertError.setText("Seat Out Of Range Error");
        }
    }//GEN-LAST:event_InsertActionPerformed
    
    private void UserAgeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_UserAgeFocusGained
        // TODO add your handling code here:
        UserAge.setText("");
    }//GEN-LAST:event_UserAgeFocusGained

    private void seatFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_seatFocusGained
        // TODO add your handling code here:
        seat.setText("");
    }//GEN-LAST:event_seatFocusGained

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) BookingTable.getModel();
        int row = BookingTable.getRowCount();

        
        int selected = BookingTable.getSelectedRow();
        if(selected>=0)
            model.removeRow(selected);
        else if(row>0)
        {
            InsertError.setText("No row Selected");
        }
        else
        {
            InsertError.setText("No available row to remove");
        }
    }//GEN-LAST:event_RemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Booking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Booking().setVisible(true);
            }
        });
    }
    
   
    private void draw()
    {
        int width = 50;
        int height = 50;
        // Stating no. of rows and columns in Each  Block
        int leftBlockSeatsCol = 2;
        int leftBlockSeatsRow = 2;
        int centreBlockSeatsRow =2;
        int centreBlockSeatsCol = 2;
        int rightBlockSeatsRow =2;
        int rightBlockSeatsCol = 2;
        //Setting Position of Block
        int leftBlockPosX = 50;
        int leftBlockPosY = 400;
        int centreBlockPosX = (leftBlockPosX + (leftBlockSeatsCol*width)) +150;
        int centreBlockPosY = 400;
        int rightBlockPosX = (centreBlockPosX +(centreBlockSeatsCol*width)) +150;	
        int rightBlockPosY = 400;
//        jLabel1.setLocation(leftBlockPosX + (width*leftBlockSeatsCol/2) -20 , leftBlockPosY );
        bookedSeats();
        HelpDraw(leftBlockSeatsCol,leftBlockSeatsRow,leftBlockPosX,leftBlockPosY,101);
        HelpDraw(centreBlockSeatsCol,centreBlockSeatsRow,centreBlockPosX,centreBlockPosY,201);
        HelpDraw(rightBlockSeatsCol,rightBlockSeatsRow,rightBlockPosX,rightBlockPosY,301);
    }
    private void bookedSeats()
    {
        Connection conn = null;
        Statement stmt = null;
        ResultSet rs = null;
         String driver = "com.mysql.jdbc.Driver";
       
         try {
            Class.forName(driver);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
         try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/LoginDB","root","16402204");
                    
        } catch (SQLException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
          String query = "select * from " + movieName +" where Date = \"" +date+"\";";
          
//        int flag = 1;
        try {
            stmt = conn.createStatement();
            rs = stmt.executeQuery(query);
//            DefaultTableModel model = (DefaultTableModel) BookingTable.getModel();  //movieTable is The design Table;
//            int row = model.getRowCount();
//            for(int i=0;i<row;i++)
//            {
//                        model.removeRow(0);
//                        id--;
//            }
                    while(rs.next())
                    {
//                        String UserName = rs.getString("Movie");
//                        String date = rs.getString("Date");
                        int SeatNo = rs.getInt("SeatNo");
//                        String time =rs.getString("Time");
                        seatList.add(SeatNo);
//                        model.addRow(new Object[] {id,movieName,date,time});
//                        id++;
//                        flag=0;
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(MovieList.class.getName()).log(Level.SEVERE, null, ex);
                }
        try {
            stmt.close();
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(Booking.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    private void HelpDraw(int Col, int Row ,int X , int Y,int adder)
    {
//        leftPanel = new JPanel();
        JButton button ;
        for(int i=0;i<Col;i++)
        {
            for (int x=0; x<Row; x++)
            {
                String rectName = new Integer(i+adder+(x*Col)).toString();
//                g.drawString(rectName,X+(i*width)+5, Y + (x*height) + 20 );
//                g.drawRect(X+(i*width),Y+(x*height), width, height);
//                  System.out.println(rectName);
                  button = new JButton(rectName);
                  button.setBounds(X+(i*40),Y+(x*40), 50, 50);
//                  add(button);
                  
//                  button.setVisible(true);
                Color c = new Color(175,175,175);
                if(seatList.contains((i+(Col*x))+adder) != true)
                {
                    button.setBackground(c);
                }
                else
                {
                     button.setBackground(Color.red);
                }
                add(button);
               
                buttonList.add(button);
            }
        }
       
    }
    
    
    
    private ArrayList<Integer> seatList = new ArrayList<Integer>();
    private String movieName="loganTable";
    private String date="01-01-2016";
    private int id =1;
    private ArrayList<JButton> buttonList = new ArrayList<JButton>(400);
//    private JPanel leftPanel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BookingTable;
    private javax.swing.JButton Insert;
    private javax.swing.JLabel InsertError;
    private javax.swing.JButton Remove;
    private javax.swing.JButton Submit;
    private javax.swing.JTextField UserAge;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField seat;
    // End of variables declaration//GEN-END:variables
}
