
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Akash
 */
public class Server extends javax.swing.JFrame {

    /**
     * Creates new form Server
     */
    public Server() {
        call();
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextFieldName = new javax.swing.JTextField();
        jTextFieldDate = new javax.swing.JTextField();
        jTextFieldTime = new javax.swing.JTextField();
        name = new javax.swing.JLabel();
        jLableDate = new javax.swing.JLabel();
        jLabeltime = new javax.swing.JLabel();
        Server = new javax.swing.JLabel();
        jButtonSubmit = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabelError = new javax.swing.JLabel();
        jButtonLoginPage = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextFieldName.setText("Movie");
        jTextFieldName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldNameFocusGained(evt);
            }
        });

        jTextFieldDate.setText("DD-MM-YY");
        jTextFieldDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldDateFocusGained(evt);
            }
        });

        jTextFieldTime.setText("HH:MM");
        jTextFieldTime.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldTimeFocusGained(evt);
            }
        });

        name.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        name.setText("Movie Name");

        jLableDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLableDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLableDate.setText("Date");

        jLabeltime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabeltime.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabeltime.setText("time");

        Server.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        Server.setForeground(new java.awt.Color(0, 153, 153));
        Server.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Server.setText("Movie System Server");

        jButtonSubmit.setText("Submit movie");
        jButtonSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSubmitActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setText("Welcome , You  Can Enter New Movie In The Data Base.");

        jButtonLoginPage.setText("Login Page");
        jButtonLoginPage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoginPageActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(Server, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabeltime, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLableDate, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabelError)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(44, 44, 44)
                                .addComponent(jButtonLoginPage, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSubmit))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldDate, javax.swing.GroupLayout.DEFAULT_SIZE, 106, Short.MAX_VALUE)
                                    .addComponent(jTextFieldName)
                                    .addComponent(jTextFieldTime)))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(Server, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLableDate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabeltime))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonLoginPage)
                            .addComponent(jButtonSubmit))
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabelError, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
     private void call()
    {
         Connection conn = null;
         Statement stmt = null;
         String driver = "com.mysql.jdbc.Driver";
         
         try {
            Class.forName(driver);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/","root","16402204");
        } catch (SQLException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        //Creating Database
        try {
            stmt = conn.createStatement();
            stmt.executeUpdate("Create Database if NOT exists LoginDB;");
            
        } catch (SQLException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
         try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/LoginDB","root","16402204");
            stmt = conn.createStatement();
            stmt.executeUpdate("Create Table if not exists MovieTable ( ID Int , Movie VarChar (100) , Date VarChar(100) , Time VarChar(100)) ;");
                    
        } catch (SQLException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
     private int Helper(Connection conn)
    {   
        Statement stmt = null;
        ResultSet rs = null;
        String query = "select * from MovieTable ";
        int flag = 1;
        try{
            stmt = conn.createStatement();
            rs = stmt.executeQuery(query);
//            System.out.println(jTextFieldUserName.getText()+" "+jTextFieldPassword.getText());
            while(rs.next())
            {
//                System.out.println(rs.getString(2)+" "+rs.getString(3));
                if(rs.getString(2).equals(jTextFieldName.getText())&& rs.getString(3).equals(jTextFieldDate.getText()) && rs.getString(4).equals(jTextFieldTime.getText()) )
                {
                    flag = 0;
                    break;
                }
            }
            if(flag==0)
            {
                jLabelError.setText("Movie already exists in the database");
                return 0;
            }
            else
            {
                return 1;
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        return 0;
    }
    private void jButtonSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSubmitActionPerformed
        // TODO add your handling code here:
        jLabelError.setText("");
        Connection conn = null;
        PreparedStatement stmt = null;
        String driver = "com.mysql.jdbc.Driver";
        
        try {
            Class.forName(driver);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/LoginDB","root","16402204");
        } catch (SQLException ex) {
            Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(Helper(conn)==0 );
        else if(check()==0)
        {
            jLabelError.setText("Wrong Date  Format");
        }
        else if(check()==1)
        {
            jLabelError.setText("Wrong Time  Format");
        }
        else
        {
            String Movie = jTextFieldName.getText();
            String Date = jTextFieldDate.getText();
            String Time = jTextFieldTime.getText();
            String query = "INSERT INTO MovieTable(  Movie ,Date ,Time) VALUES (?,?,?)";
            
            try {
                    stmt = conn.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
        //            stmt.setInt(1, id);
                    stmt.setString(1, Movie);
                    stmt.setString(2, Date);
                    stmt.setString(3, Time);
                    stmt.executeUpdate();
        //            System.out.print("h");
                } catch (SQLException ex) {
                    Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
                }
            System.out.println("1 row affected");
            jLabelError.setText("Succesfully Added");
//            JOptionPane.showMessageDialog(null,"Succesfully Added");
            String temp = Movie.split(" ")[0];
            try {
//                    conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/LoginDB","root","16402204");
                    Statement tmt;
                    tmt = conn.createStatement();
                    tmt.executeUpdate("Create Table if not exists "+temp+"Table ( ID Int , UserName VarChar (100) , SeatNo VarChar(100) ,Date VarChar(100)) ;");

                } catch (SQLException ex) {
                    Logger.getLogger(LoginForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            try {
                    stmt.close();
                    conn.close();
//                    LoginForm form = new LoginForm();
//                    this.dispose();
                    
                } catch (SQLException ex) {
                    Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
        try {
            conn.close();
        } catch (SQLException ex) {
            Logger.getLogger(SignUp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonSubmitActionPerformed

    private void jTextFieldNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNameFocusGained
        // TODO add your handling code here:
        jTextFieldName.setText("");
    }//GEN-LAST:event_jTextFieldNameFocusGained

    private void jTextFieldDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDateFocusGained
        // TODO add your handling code here:
        jTextFieldDate.setText("");
    }//GEN-LAST:event_jTextFieldDateFocusGained

    private void jTextFieldTimeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTimeFocusGained
        // TODO add your handling code here:
        jTextFieldTime.setText("");
    }//GEN-LAST:event_jTextFieldTimeFocusGained

    private void jButtonLoginPageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoginPageActionPerformed
        // TODO add your handling code here:
        LoginForm f = new LoginForm();
        f.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButtonLoginPageActionPerformed
      private int check()
       {
           //return 0 if Wrong Date return 1 if wrong Time
           String Date = jTextFieldDate.getText();
           String Time = jTextFieldTime.getText();
           for(int i=0;i<Date.length();i++)
           {
               if(i==2||i==5)
               {
                   if(Date.charAt(i)!='-')
                    return 0;
               }
               else
               {
                   if(Date.charAt(i)>'9' || Date.charAt(i)<'0')
                       return 0;
               }
           }
           for(int i=0;i<Time.length();i++)
           {
               if(i==2)
               {
                   if(Time.charAt(i)!=':')
                        return 1;
               }
               else
               {
                   if(Time.charAt(i)>'9' || Time.charAt(i)<'0')
                       return 1;
               }
           }
           return 2;
       }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Server().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Server;
    private javax.swing.JButton jButtonLoginPage;
    private javax.swing.JButton jButtonSubmit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JLabel jLabeltime;
    private javax.swing.JLabel jLableDate;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldTime;
    private javax.swing.JLabel name;
    // End of variables declaration//GEN-END:variables
}
